// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @unique
  email       String       @unique
  displayName String
  phoneNumber String?
  address     String?
  country     String?
  state       String?
  city        String?
  zipCode     String?
  about       String?
  perms       Permission[]
  requests    Request[]
  queues      Queue[]
}

model Course {
  id     String       @id @unique @default(uuid())
  name   String
  year   String
  term   String
  perms  Permission[]
  queues Queue[]
  erc    EnrollmentCode?
}

model Permission {
  id        String @id @unique @default(uuid())
  course    Course @relation(fields: [courseId], references: [id])
  courseId  String
  recipient User   @relation(fields: [userId], references: [id])
  userId    String
  role      Role   @default(STUDENT)
}

model Queue {
  id       String    @id @unique @default(uuid())
  active   Boolean   @default(false)
  name     String?
  course   Course    @relation(fields: [courseId], references: [id])
  courseId String
  requests Request[]
  owner    User      @relation(fields: [userId], references: [id])
  userId   String
}

model Request {
  id          String  @id @unique @default(uuid())
  info        String?
  problemType Int?
  queue       Queue   @relation(fields: [queueId], references: [id])
  queueId     String
  user        User    @relation(fields: [userId], references: [id])
  userId      String
}

model EnrollmentCode {
  id          String    @id @unique
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    String    @unique
  expires     DateTime  
}

enum Role {
  ADMIN
  HELPER
  STUDENT
}
